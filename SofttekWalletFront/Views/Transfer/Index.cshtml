@model Data.DTO.Transfer.TransferDto

<div class="container">

    <div class="text-center">
    <h1 class="my-4">Transfers between accounts</h1>
    <h2 class="text-danger">Remember, you CAN'T buy/transfer ChazaCrypto with Pesos and viceversa!</h2>
    <h3 class="text-success">You must buy Dollars first as an intermediary!</h3>
    </div>

    <hr />

    @using (Html.BeginForm("BeginTransaction", "Transfer", FormMethod.Post, new { id = "transferForm" }))
    {
        <div class="form-group">
            Origin Account
            <select class="form-control" id="originAccountSelect" name="OriginAccountId">
            </select>
        </div>

        <hr />

        <div class="form-group">
            Destination Account
            <select class="form-control" id="destinationAccountSelect" name="DestinationAccountId">
                
            </select>
        </div>

        <hr />

        <div class="form-group">
            @Html.LabelFor(x => x.Amount)
            @Html.EditorFor(x => x.Amount, new { htmlAttributes = new { @class = "form-control", min = "0", required = "required" } })
        </div>

        <hr />

        <div class="form-group">
            @Html.LabelFor(x => x.Concept)
            @Html.DropDownListFor(x => x.Concept, new SelectList(
        new List<SelectListItem>
        {
        new SelectListItem { Text = "Banking", Value = "1" },
        new SelectListItem { Text = "Loans", Value = "2" },
        new SelectListItem { Text = "Various", Value = "3" },
        new SelectListItem { Text = "Rent", Value = "4" },
        new SelectListItem { Text = "Gambling", Value = "5" },
        new SelectListItem { Text = "Payment", Value = "6" }
        }, "Value", "Text"), new { @class = "form-control" })
        </div>

        <hr />

        <button type="button" class="btn btn-success form-control" id="submitButton">Accept Transfer</button>
    }

</div>

<script src="~/js/Transfers/Transfers.js"></script>